# Config for Rubocop.
#
# https://docs.rubocop.org/rubocop/cops_style.html

inherit_mode:
  merge:
    - Exclude

Style/AccessModifierDeclarations:
  Enabled: true
  AllowModifiersOnAliasMethod: true
  AllowModifiersOnAttrs: true
  AllowModifiersOnSymbols: true
  EnforcedStyle: group
  # Default values:
  # AllowModifiersOnAliasMethod: true
  # AllowModifiersOnAttrs: true
  # AllowModifiersOnSymbols: true
  # EnforcedStyle: group

Style/AccessorGrouping:
  Enabled: false
  # Default values:
  # EnforcedStyle: grouped

Style/Alias:
  # `alias_method` is more convenient and universal way to define alias (synonym) for a method.
  Enabled: true
  EnforcedStyle: prefer_alias_method
  # Default values:
  # EnforcedStyle: prefer_alias

Style/AmbiguousEndlessMethodDefinition:
  Enabled: true

Style/AndOr:
  Enabled: true
  EnforcedStyle: always
  # Default values:
  # EnforcedStyle: conditionals
# WARN: Overriden in rubocop-rails to `EnforcedStyle: conditionals`.
# If file `style.yml` required after rubocop-rails then values in this file have higher priority.

Style/ArgumentsForwarding:
  Enabled: false
  # Default values:
  # AllowOnlyRestArgument: true
  # RedundantBlockArgumentNames: [blk, block, proc]
  # RedundantKeywordRestArgumentNames: [kwargs, options, opts]
  # RedundantRestArgumentNames: [args, arguments]
  # UseAnonymousForwarding: true

Style/ArrayCoercion:
  Enabled: false

Style/ArrayFirstLast:
  Enabled: false

Style/ArrayIntersect:
  Enabled: true
  # WARN: AllCops:ActiveSupportExtensionsEnabled: true

Style/ArrayJoin:
  Enabled: true

Style/AsciiComments:
  Enabled: false
  # Default values:
  # AllowedChars: [Â©]

Style/Attr:
  Enabled: true

Style/AutoResourceCleanup:
  Enabled: true

Style/BarePercentLiterals:
  Enabled: true
  EnforcedStyle: bare_percent
  # Default values:
  # EnforcedStyle: bare_percent

Style/BeginBlock:
  Enabled: true

Style/BisectedAttrAccessor:
  Enabled: true

Style/BitwisePredicate:
  Enabled: true

Style/BlockComments:
  Enabled: true

Style/BlockDelimiters:
  Enabled: true
  AllowBracesOnProceduralOneLiners: false
  AllowedPatterns: []
  AllowedMethods: [lambda, proc]
  BracesRequiredMethods: []
  EnforcedStyle: line_count_based
  FunctionalMethods: [let, let!, subject, watch]
  ProceduralMethods: [benchmark, bm, bmbm, create, each_with_object, measure, new, realtime, tap, with_object]
  # Default values:
  # AllowBracesOnProceduralOneLiners: false
  # AllowedPatterns: []
  # AllowedMethods: [lambda, proc, it]
  # BracesRequiredMethods: []
  # EnforcedStyle: line_count_based
  # FunctionalMethods: [let, let!, subject, watch]
  # ProceduralMethods: [benchmark, bm, bmbm, create, each_with_object, measure, new, realtime, tap, with_object]

Style/CaseEquality:
  Enabled: true
  AllowOnConstant: false
  AllowOnSelfClass: false
  # Default values:
  # AllowOnConstant: false
  # AllowOnSelfClass: false

Style/CaseLikeIf:
  Enabled: true
  MinBranchesCount: 3
  # Default values:
  # MinBranchesCount: 3

Style/CharacterLiteral:
  Enabled: true

Style/ClassAndModuleChildren:
  Enabled: true
  Exclude:
    - './config/application.rb'
  EnforcedStyle: compact
  EnforcedStyleForClasses: ~
  EnforcedStyleForModules: ~
  # Default values:
  # EnforcedStyle: nested
  # EnforcedStyleForClasses: ~
  # EnforcedStyleForModules: ~

Style/ClassCheck:
  Enabled: true
  EnforcedStyle: 'is_a?'
  # Default values:
  # EnforcedStyle: 'is_a?'

Style/ClassEqualityComparison:
  Enabled: true
  AllowedMethods: []
  AllowedPatterns: []
  # Default values:
  # AllowedMethods: ['==', 'equal?', 'eql?']
  # AllowedPatterns: []

Style/ClassMethods:
  Enabled: true

Style/ClassMethodsDefinitions:
  Enabled: false
  # Default values:
  # EnforcedStyle: def_self

Style/ClassVars:
  Enabled: true
  Severity: warning

Style/CollectionCompact:
  Enabled: true
  AllowedReceivers: []
  # Default values:
  # AllowedReceivers: []

Style/CollectionMethods:
  Enabled: true
  MethodsAcceptingSymbol: [inject, reduce]
  PreferredMethods:
    collect: 'map'
    collect!: 'map!'
    collect_concat: 'flat_map'
    inject: 'reduce'
    detect: 'find'
    find_all: 'select'
    member?: 'include?'
  # Default values:
  # MethodsAcceptingSymbol: [inject, reduce]
  # PreferredMethods:
  #   collect: 'map'
  #   collect!: 'map!'
  #   collect_concat: 'flat_map'
  #   inject: 'reduce'
  #   detect: 'find'
  #   find_all: 'select'
  #   member?: 'include?'

Style/CollectionQuerying:
  Enabled: true
  Severity: warning
# This check may conflict with method `count` from ActiveRecord.

Style/ColonMethodCall:
  Enabled: true

Style/ColonMethodDefinition:
  Enabled: true

Style/CombinableDefined:
  Enabled: true

Style/CombinableLoops:
  Enabled: true

Style/CommandLiteral:
  Enabled: true
  AllowInnerBackticks: false
  EnforcedStyle: backticks
  # Default values:
  # AllowInnerBackticks: false
  # EnforcedStyle: backticks

Style/CommentAnnotation:
  Enabled: true
  Keywords: [TODO, WARN]
  RequireColon: true
  # Default values:
  # Keywords: [TODO, FIXME, OPTIMIZE, HACK, REVIEW, NOTE]
  # RequireColon: true

Style/CommentedKeyword:
  Enabled: true

Style/ComparableBetween:
  Enabled: false
# Logical comparisons are faster than `Range#cover?` and `Integer#between?`,
# though the difference is not big.

Style/ComparableClamp:
  Enabled: true

Style/ConcatArrayLiterals:
  Enabled: true

Style/ConditionalAssignment:
  Enabled: true
  EnforcedStyle: assign_to_condition
  IncludeTernaryExpressions: true
  SingleLineConditionsOnly: false
  # Default values:
  # EnforcedStyle: assign_to_condition
  # IncludeTernaryExpressions: true
  # SingleLineConditionsOnly: true

Style/ConstantVisibility:
  Enabled: false
  # Default values:
  # IgnoreModules: false

Style/Copyright:
  Enabled: false
  # Default values:
  # AutocorrectNotice: ''
  # Notice: '^Copyright (\(c\) )?2[0-9]{3} .+'

Style/DataInheritance:
  Enabled: true

Style/DateTime:
  Enabled: true
  AllowCoercion: false
  # Default values:
  # AllowCoercion: false

Style/DefWithParentheses:
  Enabled: true

Style/DigChain:
  Enabled: true

Style/Dir:
  Enabled: true

Style/DirEmpty:
  Enabled: true

Style/DisableCopsWithinSourceCodeDirective:
  Enabled: false
  # Default values:
  # AllowedCops: []

Style/DocumentDynamicEvalDefinition:
  Enabled: true

Style/Documentation:
  Enabled: true
  Exclude:
    - 'config/**/*.rb'
    - 'db/migrate/*.rb'
  Severity: warning
  AllowedConstants: [ClassMethods]
  # Default values:
  # AllowedConstants: []

Style/DocumentationMethod:
  Enabled: true
  Exclude:
    - 'config/**/*.rb'
    - 'db/migrate/*.rb'
  Severity: warning
  AllowedMethods: []
  RequireForNonPublicMethods: true
  # Default values:
  # AllowedMethods: []
  # RequireForNonPublicMethods: false

Style/DoubleCopDisableDirective:
  Enabled: true

Style/DoubleNegation:
  Enabled: true
  EnforcedStyle: allowed_in_returns
  # Default values:
  # EnforcedStyle: allowed_in_returns

Style/EachForSimpleLoop:
  Enabled: true

Style/EachWithObject:
  Enabled: true

Style/EmptyBlockParameter:
  Enabled: true

Style/EmptyCaseCondition:
  Enabled: true

Style/EmptyElse:
  Enabled: true
  AllowComments: false
  EnforcedStyle: both
  # Default values:
  # AllowComments: false
  # EnforcedStyle: both

Style/EmptyHeredoc:
  Enabled: true

Style/EmptyLambdaParameter:
  Enabled: true

Style/EmptyLiteral:
  Enabled: true

Style/EmptyMethod:
  Enabled: true
  EnforcedStyle: expanded
  # Default values:
  # EnforcedStyle: compact

Style/EmptyStringInsideInterpolation:
  Enabled: false
  # Default values:
  # EnforcedStyle: trailing_conditional

Style/Encoding:
  Enabled: true

Style/EndBlock:
  Enabled: true

Style/EndlessMethod:
  Enabled: true
  EnforcedStyle: allow_single_line
  # Default values:
  # EnforcedStyle: allow_single_line

Style/EnvHome:
  Enabled: true

Style/EvalWithLocation:
  Enabled: true

Style/EvenOdd:
  Enabled: true

# WARN: no commit!
# Style/ExactRegexpMatch:
#   Enabled: true

Style/ExpandPathArguments:
  Enabled: true

Style/ExplicitBlockArgument:
  Enabled: true

Style/ExponentialNotation:
  Enabled: true
  EnforcedStyle: scientific
  # Default values:
  # EnforcedStyle: scientific

Style/FetchEnvVar:
  Enabled: true
  AllowedVars: []
  DefaultToNil: false
  # Default values:
  # AllowedVars: []
  # DefaultToNil: true

Style/FileEmpty:
  Enabled: true

Style/FileNull:
  Enabled: true

Style/FileRead:
  Enabled: true

Style/FileTouch:
  Enabled: true
  Severity: warning

Style/FileWrite:
  Enabled: true

Style/FloatDivision:
  Enabled: true
  EnforcedStyle: single_coerce
  # Default values:
  # EnforcedStyle: single_coerce

Style/For:
  Enabled: true
  EnforcedStyle: each
  # Default values:
  # EnforcedStyle: each

Style/FormatString:
  Enabled: true
  EnforcedStyle: sprintf
  # Default values:
  # EnforcedStyle: format
# `format` is a common word in application code, therefore it is hard to find usages of
# `format` calls in the code. Better to use less repetitive word.

Style/FormatStringToken:
  Enabled: true
  AllowedMethods: []
  AllowedPatterns: []
  EnforcedStyle: annotated
  MaxUnannotatedPlaceholdersAllowed: 1
  Mode: aggressive
  # Default values:
  # AllowedMethods: []
  # AllowedPatterns: []
  # EnforcedStyle: annotated
  # MaxUnannotatedPlaceholdersAllowed: 1
  # Mode: aggressive
# @see https://apidock.com/ruby/Kernel/sprintf
# Annotated:
#  string: %<name>s
#  integer: %<name>d, %<name>i, %<name>u
#  float: %<name>f (number as is), %<name>e (1e6 -> "1.000000e+06"), %<name>g (1e6 -> "1e+06")
# Annotated strings (%<name>) eval faster than template strings (%{name}).

Style/FrozenStringLiteralComment:
  EnforcedStyle: always
  # Default values:
  # EnforcedStyle: always
# Frozen strings improve script execution by 1-3%.

Style/GlobalStdStream:
  Enabled: true

Style/GlobalVars:
  Enabled: true
  AllowedVariables: []
  # Default values:
  # AllowedVariables: []

Style/GuardClause:
  Enabled: true
  AllowConsecutiveConditionals: false
  MinBodyLength: 1
  # Default values:
  # AllowConsecutiveConditionals: false
  # MinBodyLength: 1

Style/HashAsLastArrayItem:
  Enabled: true
  EnforcedStyle: braces
  # Default values:
  # EnforcedStyle: braces

Style/HashConversion:
  Enabled: true
  AllowSplatArgument: false
  # Default values:
  # AllowSplatArgument: true

Style/HashEachMethods:
  Enabled: true
  AllowedReceivers: [Thread.current]

Style/HashExcept:
  Enabled: true

Style/HashFetchChain:
  Enabled: true

Style/HashLikeCase:
  Enabled: true
  MinBranchesCount: 2
  # Default values:
  # MinBranchesCount: 3

Style/HashSlice:
  Enabled: true

Style/HashSyntax:
  Enabled: true
  EnforcedShorthandSyntax: always
  EnforcedStyle: ruby19_no_mixed_keys
  PreferHashRocketsForNonAlnumEndingSymbols: false
  UseHashRocketsWithSymbolValues: false
  # Default values:
  # EnforcedShorthandSyntax: either
  # EnforcedStyle: ruby19
  # PreferHashRocketsForNonAlnumEndingSymbols: false
  # UseHashRocketsWithSymbolValues: false

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/IdenticalConditionalBranches:
  Enabled: true

Style/IfInsideElse:
  Enabled: true
  AllowIfModifier: true
  # Default values:
  # AllowIfModifier: false

Style/IfUnlessModifier:
  Enabled: true

Style/IfUnlessModifierOfIfUnless:
  Enabled: true

Style/IfWithBooleanLiteralBranches:
  Enabled: true
  AllowedMethods: []
  # Default values:
  # AllowedMethods: ['nonzero?']

Style/IfWithSemicolon:
  Enabled: true

Style/ImplicitRuntimeError:
  Enabled: false

Style/InPatternThen:
  Enabled: true

Style/InfiniteLoop:
  Enabled: true

Style/InlineComment:
  Enabled: false

Style/InverseMethods:
  Enabled: true
  InverseBlocks:
    :select: :reject
    :select!: :reject!
  InverseMethods:
    :any?: :none?
    :even?: :odd?
    :==: :!=
    :=~: :!~
    :<: :>=
    :>: :<=
    :present?: :blank?
    :include?: :exclude?
  # Default values:
  # InverseBlocks: {:select: :reject, :select!: :reject!}
  # InverseMethods: {:any?: :none?, :even?: :odd?, :==: :!=, :=~: :!~, :<: :>=, :>: :<=}

Style/InvertibleUnlessCondition:
  Enabled: true
  InverseMethods:
    :!=: :==
    :>: :<=
    :<=: :>
    :<: :>=
    :>=: :<
    :!~: :=~
    :zero?: :nonzero?
    :nonzero?: :zero?
    :any?: :none?
    :none?: :any?
    :even?: :odd?
    :odd?: :even?
    :present?: :blank?
    :blank?: :present?
    :include?: :exclude?
    :exclude?: :include?
    :one?: :many?
    :many?: :one?
  # Default values:
  # InverseMethods:
  #   :!=: :==
  #   :>: :<=
  #   :<=: :>
  #   :<: :>=
  #   :>=: :<
  #   :!~: :=~
  #   :zero?: :nonzero?
  #   :nonzero?: :zero?
  #   :any?: :none?
  #   :none?: :any?
  #   :even?: :odd?
  #   :odd?: :even?

Style/IpAddresses:
  Enabled: true
  AllowedAddresses: ["::"]
  # Default values:
  # AllowedAddresses: ["::"]

Style/ItAssignment:
  Enabled: false

Style/ItBlockParameter:
  Enabled: true
  EnforcedStyle: only_numbered_parameters
  # Default values:
  # EnforcedStyle: allow_single_line

Style/KeywordArgumentsMerging:
  Enabled: true

Style/KeywordParametersOrder:
  Enabled: true

Style/Lambda:
  Enabled: true
  EnforcedStyle: literal
  # Default values:
  # EnforcedStyle: line_count_dependent

Style/LambdaCall:
  Enabled: true
  EnforcedStyle: call
  # Default values:
  # EnforcedStyle: call

Style/LineEndConcatenation:
  Enabled: true

Style/MagicCommentFormat:
  Enabled: true
  DirectiveCapitalization: lowercase
  EnforcedStyle: snake_case
  ValueCapitalization: lowercase
  # Default values:
  # DirectiveCapitalization: lowercase
  # EnforcedStyle: snake_case
  # ValueCapitalization: ~

Style/MapCompactWithConditionalBlock:
  Enabled: true

Style/MapIntoArray:
  Enabled: true

Style/MapToHash:
  Enabled: true

Style/MapToSet:
  Enabled: true

Style/MethodCallWithArgsParentheses:
  Enabled: true
  Exclude:
    - 'db/**/*.rb'
  AllowedMethods:
    # FactoryBot:
    - association
    # Rails:
    - redirect_back
    - redirect_back_or_to
    - redirect_to
    - render
    - send_data
    # RSpec:
    - be
    - delete
    - describe
    - eq
    - get
    - not_to
    - patch
    - post
    - put
    - shared_context
    - shared_examples
    - to
    # Ruby core:
    - p
    - pp
    - print
    - puts
    - raise
    - require
    - require_relative
    - sleep
    - warn
    - yield
  AllowedPatterns: []
  EnforcedStyle: require_parentheses
  IgnoreMacros: true
  IncludedMacros: []
  # Default values:
  # AllowedMethods: []
  # AllowedPatterns: []
  # AllowParenthesesInCamelCaseMethod: false
  # AllowParenthesesInChaining: false
  # AllowParenthesesInMultilineCall: false
  # AllowParenthesesInStringInterpolation: false
  # EnforcedStyle: require_parentheses
  # IgnoreMacros: true
  # IncludedMacros: []

Style/MethodCallWithoutArgsParentheses:
  Enabled: true
  AllowedMethods: []
  AllowedPatterns: []
  # Default values:
  # AllowedMethods: []
  # AllowedPatterns: []

Style/MethodCalledOnDoEndBlock:
  Enabled: false

Style/MethodDefParentheses:
  Enabled: true
  EnforcedStyle: require_parentheses
  # Default values:
  # EnforcedStyle: require_parentheses

Style/MinMax:
  Enabled: true

Style/MinMaxComparison:
  Enabled: true

Style/MissingElse:
  Enabled: false
  # Default values:
  # EnforcedStyle: both

Style/MissingRespondToMissing:
  Enabled: true

Style/MixinGrouping:
  Enabled: true
  EnforcedStyle: separated
  # Default values:
  # EnforcedStyle: separated

Style/MixinUsage:
  Enabled: true

Style/ModuleFunction:
  Enabled: true
  EnforcedStyle: extend_self
  # Default values:
  # EnforcedStyle: module_function
# @see https://idiosyncratic-ruby.com/8-self-improvement.html
# `extend self` is preferred way to define module-scoped methods, because it allows
# to use public and private scopes, and the class extending/including this module
# has these methods within the same scopes as in the module.

Style/MultilineBlockChain:
  Enabled: true

Style/MultilineIfModifier:
  Enabled: true

Style/MultilineIfThen:
  Enabled: true

Style/MultilineInPatternThen:
  Enabled: true

Style/MultilineMemoization:
  Enabled: true
  EnforcedStyle: keyword
  # Default values:
  # EnforcedStyle: keyword

Style/MultilineMethodSignature:
  Enabled: false

Style/MultilineTernaryOperator:
  Enabled: true

Style/MultilineWhenThen:
  Enabled: true

Style/MultipleComparison:
  Enabled: true
  AllowMethodComparison: false
  ComparisonsThreshold: 2
  # Default values:
  # AllowMethodComparison: true
  # ComparisonsThreshold: 2

Style/MutableConstant:
  Enabled: true
  EnforcedStyle: strict
  # Default values:
  # EnforcedStyle: literals
# @see https://docs.ruby-lang.org/en/3.0/syntax/comments_rdoc.html#label-shareable_constant_value+Directive
# Ruby scripts should include line `# shareable_constant_value: literal`. It allows to remove
# `.freeze` calls from assignments to constants, but requires to add `.freeze` to the objects
# (Date.new, Time.new, ...) or to use `Ractor.make_shareable(value)` for more complicated values.

Style/NegatedIf:
  Enabled: false
  # Default values:
  # EnforcedStyle: both

Style/NegatedIfElseCondition:
  Enabled: true

Style/NegatedUnless:
  Enabled: true
  EnforcedStyle: both
  # Default values:
  # EnforcedStyle: both

Style/NegatedWhile:
  Enabled: false

Style/NestedFileDirname:
  Enabled: true

Style/NestedModifier:
  Enabled: true

Style/NestedParenthesizedCalls:
  Enabled: true
  AllowedMethods: []
  # Default values:
  # AllowedMethods:
  #   - be
  #   - be_a
  #   - be_an
  #   - be_between
  #   - be_falsey
  #   - be_kind_of
  #   - be_instance_of
  #   - be_truthy
  #   - be_within
  #   - eq
  #   - eql
  #   - end_with
  #   - include
  #   - match
  #   - raise_error
  #   - respond_to
  #   - start_with

Style/NestedTernaryOperator:
  Enabled: true

Style/Next:
  Enabled: true
  AllowConsecutiveConditionals: false
  EnforcedStyle: skip_modifier_ifs
  MinBodyLength: 3
  # Default values:
  # AllowConsecutiveConditionals: false
  # EnforcedStyle: skip_modifier_ifs
  # MinBodyLength: 3

Style/NilComparison:
  Enabled: true
  EnforcedStyle: predicate
  # Default values:
  # EnforcedStyle: predicate

Style/NilLambda:
  Enabled: true

Style/NonNilCheck:
  Enabled: true
  IncludeSemanticChanges: false
  # Default values:
  # IncludeSemanticChanges: false

Style/Not:
  Enabled: true

Style/NumberedParameters:
  Enabled: true
  EnforcedStyle: disallow
  # Default values:
  # EnforcedStyle: allow_single_line

Style/NumberedParametersLimit:
  Enabled: false
  # Default values:
  # Max: 1
# This rule is disabled, because Style/NumberedParameters disallows to use numbered parameters.

Style/NumericLiteralPrefix:
  Enabled: true
  EnforcedOctalStyle: zero_with_o
  # Default values:
  # EnforcedStyle: zero_with_o

Style/NumericLiterals:
  Enabled: true
  AllowedNumbers: []
  AllowedPatterns: []
  MinDigits: 5
  Strict: false
  # Default values:
  # AllowedNumbers: []
  # AllowedPatterns: []
  # MinDigits: 5
  # Strict: false

Style/NumericPredicate:
  Enabled: true
  AllowedMethods: []
  AllowedPatterns: []
  EnforcedStyle: comparison
  # Default values:
  # AllowedMethods: []
  # AllowedPatterns: []
  # EnforcedStyle: predicate

Style/ObjectThen:
  Enabled: true
  EnforcedStyle: then
  # Default values:
  # EnforcedStyle: then

Style/OneLineConditional:
  Enabled: true
  AlwaysCorrectToMultiline: true
  # Default values:
  # AlwaysCorrectToMultiline: false

Style/OpenStructUse:
  Enabled: true

Style/OperatorMethodCall:
  Enabled: true

Style/OptionHash:
  Enabled: true
  Allowlist: []
  SuspiciousParamNames: [options, opts, args, params, parameters]
  # Default values:
  # Allowlist: []
  # SuspiciousParamNames: [options, opts, args, params, parameters]

Style/OptionalArguments:
  Enabled: true

Style/OptionalBooleanParameter:
  Enabled: true
  AllowedMethods: ['respond_to_missing?']
  # Default values:
  # AllowedMethods: ['respond_to_missing?']

Style/OrAssignment:
  Enabled: true

Style/ParallelAssignment:
  Enabled: true

Style/ParenthesesAroundCondition:
  Enabled: true
  AllowInMultilineConditions: false
  AllowSafeAssignment: true
  # Default values:
  # AllowInMultilineConditions: false
  # AllowSafeAssignment: true

Style/PercentLiteralDelimiters:
  Enabled: true
  PreferredDelimiters:
    default: ()
    '%i': '[]'
    '%I': '[]'
    '%r': '{}'
    '%w': '[]'
    '%W': '[]'
  # Default values:
  # PreferredDelimiters:
  #   default: ()
  #   '%i': '[]'
  #   '%I': '[]'
  #   '%r': '{}'
  #   '%w': '[]'
  #   '%W': '[]'

Style/PercentQLiterals:
  Enabled: true
  EnforcedStyle: upper_case_q
  # Default values:
  # EnforcedStyle: lower_case_q

Style/PerlBackrefs:
  Enabled: true

Style/PreferredHashMethods:
  Enabled: true
  EnforcedStyle: short
  # Default values:
  # EnforcedStyle: short

Style/Proc:
  Enabled: true

Style/QuotedSymbols:
  Enabled: true
  EnforcedStyle: same_as_string_literals
  # Default values:
  # EnforcedStyle: same_as_string_literals

Style/RaiseArgs:
  Enabled: true
  AllowedCompactTypes: []
  EnforcedStyle: exploded
  # Default values:
  # AllowedCompactTypes: []
  # EnforcedStyle: exploded

Style/RandomWithOffset:
  Enabled: true

Style/RedundantArgument:
  Enabled: true
  Methods:
    join: ''
    sum: 0
    exit: true
    exit!: false
    split: ' '
    chomp: "\n"
    chomp!: "\n"
  # Default values:
  # Methods:
  #   join: '' # Array#join
  #   sum: 0 # Array#sum
  #   exit: true # Kernel.#exit
  #   exit!: false # Kernel.#exit!
  #   split: ' ' # String#split
  #   chomp: "\n" # String#chomp
  #   chomp!: "\n" # String#chomp!

Style/RedundantArrayConstructor:
  Enabled: true

Style/RedundantArrayFlatten:
  Enabled: true

Style/RedundantAssignment:
  Enabled: true

Style/RedundantBegin:
  Enabled: true

Style/RedundantCapitalW:
  Enabled: true

Style/RedundantCondition:
  Enabled: true
  AllowedMethods: []
  # Default values:
  # AllowedMethods: ['nonzero?']

Style/RedundantConditional:
  Enabled: true

Style/RedundantConstantBase:
  Enabled: true

Style/RedundantCurrentDirectoryInPath:
  Enabled: true

Style/RedundantDoubleSplatHashBraces:
  Enabled: true

Style/RedundantEach:
  Enabled: true

Style/RedundantException:
  Enabled: true

Style/RedundantFetchBlock:
  Enabled: true
  Exclude:
    - 'config/puma.rb' # Rails app templates uses `ENV.fetch("PORT") { 3000 }`
  SafeForConstants: false
  # Default values:
  # SafeForConstants: false

Style/RedundantFileExtensionInRequire:
  Enabled: true

Style/RedundantFilterChain:
  Enabled: true

Style/RedundantFormat:
  Enabled: true

Style/RedundantFreeze:
  Enabled: true

Style/RedundantHeredocDelimiterQuotes:
  Enabled: true

Style/RedundantInitialize:
  Enabled: true
  AllowComments: true
  # Default values:
  # AllowComments: true

Style/RedundantInterpolation:
  Enabled: true

Style/RedundantInterpolationUnfreeze:
  Enabled: true

Style/RedundantLineContinuation:
  Enabled: true

Style/RedundantParentheses:
  Enabled: true

Style/RedundantPercentQ:
  Enabled: true

Style/RedundantRegexpArgument:
  Enabled: true

Style/RedundantRegexpCharacterClass:
  Enabled: true

Style/RedundantRegexpConstructor:
  Enabled: true

Style/RedundantRegexpEscape:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: false
  # Default values:
  # AllowMultipleReturnValues: false

Style/RedundantSelf:
  Enabled: true
# The only difference between `private` and `protected` class/module scopes:
#   class C
#     def +(other) = z + other.z
#     def -(other) = x - other.x
#     private def z = 1
#     protected def x = 1
#   end
#   c = C.new; d = C.new
#   c + d # Error: cannot call private method.
#   c - d # => 0, can call protected method of the same class or descendant classes.

Style/RedundantSelfAssignment:
  Enabled: true

Style/RedundantSelfAssignmentBranch:
  Enabled: true

Style/RedundantSort:
  Enabled: true

Style/RedundantSortBy:
  Enabled: true

Style/RedundantStringEscape:
  Enabled: true

Style/RegexpLiteral:
  Enabled: true
  AllowInnerSlashes: false
  EnforcedStyle: slashes
  # Default values:
  # AllowInnerSlashes: false
  # EnforcedStyle: slashes

Style/RequireOrder:
  Enabled: true
  Exclude:
    - 'bin/*'
    - 'config/*.rb'

Style/RescueModifier:
  Enabled: true

Style/RescueStandardError:
  Enabled: true
  EnforcedStyle: explicit
  # Default values:
  # EnforcedStyle: explicit

Style/ReturnNil:
  Enabled: true
  EnforcedStyle: return
  # Default values:
  # EnforcedStyle: return

Style/ReturnNilInPredicateMethodDefinition:
  Enabled: true
  AllowedMethods: []
  AllowedPatterns: []
  # Default values:
  # AllowedMethods: []
  # AllowedPatterns: []

Style/SafeNavigation:
  Enabled: true
  AllowedMethods: []
  ConvertCodeThatCanStartToReturnNil: true
  MaxChainLength: 2
  # Default values:
  # AllowedMethods: ['present?', 'blank?', presence, try, try!]
  # ConvertCodeThatCanStartToReturnNil: false
  # MaxChainLength: 2

Style/SafeNavigationChainLength:
  Enabled: true
  Max: 2
  # Default values:
  # Max: 2

Style/Sample:
  Enabled: true

Style/SelectByRegexp:
  Enabled: true

Style/SelfAssignment:
  Enabled: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: false
  # Default values:
  # AllowAsExpressionSeparator: false

Style/Send:
  Enabled: true

Style/SendWithLiteralMethodName:
  Enabled: true
  AllowSend: true
  # AllowSend: true

Style/SignalException:
  Enabled: true
  EnforcedStyle: only_raise
  # Default values:
  # EnforcedStyle: only_raise

Style/SingleArgumentDig:
  Enabled: true

Style/SingleLineBlockParams:
  Enabled: true
  Methods:
    - reduce: [acc, el]
    - inject: [acc, el]
  # Default values:
  # Methods:
  #   - reduce: [acc, elem]
  #   - inject: [acc, elem]

Style/SingleLineDoEndBlock:
  Enabled: true

Style/SingleLineMethods:
  Enabled: true
  AllowIfMethodIsEmpty: false
  # Default values:
  # AllowIfMethodIsEmpty: true

Style/SlicingWithRange:
  Enabled: true

Style/SoleNestedConditional:
  Enabled: true
  AllowModifier: false
  # Default values:
  # AllowModifier: false

Style/SpecialGlobalVars:
  Enabled: true
  EnforcedStyle: use_english_names
  RequireEnglish: false # Rails has already required this.
  # Default values:
  # EnforcedStyle: use_english_names
  # RequireEnglish: true

Style/StabbyLambdaParentheses:
  Enabled: true
  EnforcedStyle: require_parentheses
  # Default values:
  # EnforcedStyle: require_parentheses

Style/StaticClass:
  Enabled: true

Style/StderrPuts:
  Enabled: true

Style/StringChars:
  Enabled: true

Style/StringConcatenation:
  Enabled: true
  Mode: aggressive
  # Default values:
  # Mode: aggressive

Style/StringHashKeys:
  Enabled: false
  Exclude:
    - 'config/environments/*.rb'

Style/StringLiterals:
  Enabled: true
  ConsistentQuotesInMultiline: true
  EnforcedStyle: double_quotes
  # Default values:
  # ConsistentQuotesInMultiline: false
  # EnforcedStyle: single_quotes

Style/StringLiteralsInInterpolation:
  Enabled: true
  EnforcedStyle: double_quotes
  # Default values:
  # EnforcedStyle: single_quotes

Style/StringMethods:
  Enabled: true
  PreferredMethods:
    intern: to_sym
  # Default values:
  # PreferredMethods:
  #   intern: to_sym

Style/Strip:
  Enabled: true

Style/StructInheritance:
  Enabled: true

Style/SuperArguments:
  Enabled: true

Style/SuperWithArgsParentheses:
  Enabled: true

Style/SwapValues:
  Enabled: true

Style/SymbolArray:
  Enabled: true
  EnforcedStyle: percent
  MinSize: 2
  # Default values:
  # EnforcedStyle: percent
  # MinSize: 2

Style/SymbolLiteral:
  Enabled: true

Style/SymbolProc:
  Enabled: true
  AllowComments: true
  AllowedMethods: [define_method]
  AllowedPatterns: []
  AllowMethodsWithArguments: false
  # Default values:
  # AllowComments: false
  # AllowedMethods: [define_method]
  # AllowedPatterns: []
  # AllowMethodsWithArguments: false

Style/TernaryParentheses:
  Enabled: true
  AllowSafeAssignment: false
  EnforcedStyle: require_no_parentheses
  # Default values:
  # AllowSafeAssignment: true
  # EnforcedStyle: require_no_parentheses

Style/TopLevelMethodDefinition:
  Enabled: true
  Exclude:
    - db/seeds.rb

Style/TrailingBodyOnClass:
  Enabled: true

Style/TrailingBodyOnMethodDefinition:
  Enabled: true

Style/TrailingBodyOnModule:
  Enabled: true

Style/TrailingCommaInArguments:
  Enabled: true
  EnforcedStyleForMultiline: no_comma
  # Default values:
  # EnforcedStyleForMultiline: no_comma

Style/TrailingCommaInArrayLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma
  # Default values:
  # EnforcedStyleForMultiline: no_comma
# Style "consistent_comma" is the same as "diff_comma" when brackets & array items are on different
# lines.

Style/TrailingCommaInBlockArgs:
  Enabled: false

Style/TrailingCommaInHashLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma
  # Default values:
  # EnforcedStyleForMultiline: no_comma

Style/TrailingMethodEndStatement:
  Enabled: true

Style/TrailingUnderscoreVariable:
  Enabled: false
  # Default values:
  # AllowNamedUnderscoreVariables: true

Style/TrivialAccessors:
  Enabled: true
  AllowedMethods:
    - to_ary
    - to_a
    - to_c
    - to_enum
    - to_h
    - to_hash
    - to_i
    - to_int
    - to_io
    - to_open
    - to_path
    - to_proc
    - to_r
    - to_regexp
    - to_str
    - to_s
    - to_sym
  AllowDSLWriters: true
  AllowPredicates: true
  ExactNameMatch: true
  IgnoreClassMethods: false
  # Default values:
  # AllowedMethods:
  #   - to_ary
  #   - to_a
  #   - to_c
  #   - to_enum
  #   - to_h
  #   - to_hash
  #   - to_i
  #   - to_int
  #   - to_io
  #   - to_open
  #   - to_path
  #   - to_proc
  #   - to_r
  #   - to_regexp
  #   - to_str
  #   - to_s
  #   - to_sym
  # AllowDSLWriters: true
  # AllowPredicates: true
  # ExactNameMatch: true
  # IgnoreClassMethods: false

Style/UnlessElse:
  Enabled: true

Style/UnlessLogicalOperators:
  Enabled: true
  EnforcedStyle: forbid_logical_operators
  # Default values:
  # EnforcedStyle: forbid_mixed_logical_operators

Style/UnpackFirst:
  Enabled: true

Style/VariableInterpolation:
  Enabled: true

Style/WhenThen:
  Enabled: true

Style/WhileUntilDo:
  Enabled: true

Style/WhileUntilModifier:
  Enabled: false

Style/WordArray:
  Enabled: true
  EnforcedStyle: percent
  MinSize: 3
  WordRegex: !ruby/regexp '/\A(?:\p{Word}|\p{Word}-\p{Word}|\n|\t)+\z/'
  # Default values:
  # EnforcedStyle: percent
  # MinSize: 2
  # WordRegex: !ruby/regexp '/\A(?:\p{Word}|\p{Word}-\p{Word}|\n|\t)+\z/'

Style/YAMLFileRead:
  Enabled: true

Style/YodaCondition:
  Enabled: true
  EnforcedStyle: forbid_for_equality_operators_only
  # Default values:
  # EnforcedStyle: forbid_for_all_comparison_operators

Style/YodaExpression:
  Enabled: false
  # Default values:
  # SupportedOperators: ['*', '+', '&', '|', '^']

Style/ZeroLengthPredicate:
  Enabled: true
